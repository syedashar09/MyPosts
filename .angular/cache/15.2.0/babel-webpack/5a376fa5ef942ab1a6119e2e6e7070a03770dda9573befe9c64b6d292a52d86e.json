{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    const isAuth = this.authService.getIsAuth();\n    if (!isAuth) {\n      this.router.navigate([\"login\"]);\n    }\n    return isAuth;\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac\n});","map":{"version":3,"mappings":";;;AAMA,OAAM,MAAOA,SAAS;EACrBC,YAAoBC,WAAwB,EAASC,MAAc;IAA/C,gBAAW,GAAXD,WAAW;IAAsB,WAAM,GAANC,MAAM;EAAW;EAEtEC,WAAW,CACVC,KAA6B,EAC7BC,KAA0B;IAE1B,MAAMC,MAAM,GAAG,IAAI,CAACL,WAAW,CAACM,SAAS,EAAE;IAC3C,IAAI,CAACD,MAAM,EAAE;MACZ,IAAI,CAACJ,MAAM,CAACM,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;IAGhC,OAAOF,MAAM;EACd;;AAbYP,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAU,SAATV,SAAS;AAAA","names":["AuthGuard","constructor","authService","router","canActivate","route","state","isAuth","getIsAuth","navigate","factory"],"sourceRoot":"","sources":["C:\\Projects\\myPosts\\src\\app\\Auth\\Auth.Guard.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree, Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard {\r\n\tconstructor(private authService: AuthService, public router: Router) {}\r\n\r\n\tcanActivate(\r\n\t\troute: ActivatedRouteSnapshot,\r\n\t\tstate: RouterStateSnapshot\r\n\t): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n\t\tconst isAuth = this.authService.getIsAuth();\r\n\t\tif (!isAuth) {\r\n\t\t\tthis.router.navigate([\"login\"]);\r\n\t\t}\r\n\r\n\t\treturn isAuth;\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}