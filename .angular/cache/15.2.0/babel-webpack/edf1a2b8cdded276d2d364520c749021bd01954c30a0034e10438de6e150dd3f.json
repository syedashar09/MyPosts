{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/progress-spinner\";\nfunction SignupComponent_mat_spinner_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 2);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"diameter\", 80);\n  }\n}\nfunction SignupComponent_div_1_div_8_mat_error_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"this is a required field\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_div_1_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, SignupComponent_div_1_div_8_mat_error_1_Template, 2, 0, \"mat-error\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.signupForm.email.errors.required);\n  }\n}\nfunction SignupComponent_div_1_div_11_mat_error_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"this is a required field\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_div_1_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, SignupComponent_div_1_div_11_mat_error_1_Template, 2, 0, \"mat-error\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.signupForm.username.errors.required);\n  }\n}\nfunction SignupComponent_div_1_div_14_mat_error_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"this is a required field\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_div_1_div_14_mat_error_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Min length is 10\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_div_1_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, SignupComponent_div_1_div_14_mat_error_1_Template, 2, 0, \"mat-error\", 12);\n    i0.ɵɵtemplate(2, SignupComponent_div_1_div_14_mat_error_2_Template, 2, 0, \"mat-error\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.signupForm.password.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.signupForm.password.errors.minlength);\n  }\n}\nfunction SignupComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"mat-card\", 4)(2, \"mat-card-title\")(3, \"span\");\n    i0.ɵɵtext(4, \"Sign Up\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"form\", 5);\n    i0.ɵɵlistener(\"ngSubmit\", function SignupComponent_div_1_Template_form_ngSubmit_5_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.OnSignup());\n    });\n    i0.ɵɵelementStart(6, \"mat-form-field\");\n    i0.ɵɵelement(7, \"input\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, SignupComponent_div_1_div_8_Template, 2, 1, \"div\", 7);\n    i0.ɵɵelementStart(9, \"mat-form-field\");\n    i0.ɵɵelement(10, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, SignupComponent_div_1_div_11_Template, 2, 1, \"div\", 7);\n    i0.ɵɵelementStart(12, \"mat-form-field\");\n    i0.ɵɵelement(13, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(14, SignupComponent_div_1_div_14_Template, 3, 2, \"div\", 7);\n    i0.ɵɵelementStart(15, \"button\", 10);\n    i0.ɵɵtext(16, \" LogIn\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.signupForm);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.signupForm.email.invalid && (ctx_r1.signupForm.email.touched || ctx_r1.signupForm.email.dirty));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.signupForm.username.invalid && (ctx_r1.signupForm.username.touched || ctx_r1.signupForm.username.dirty));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.signupForm.password.invalid && (ctx_r1.signupForm.password.touched || ctx_r1.signupForm.password.dirty));\n  }\n}\nexport class SignupComponent {\n  constructor(fb, authService) {\n    this.fb = fb;\n    this.authService = authService;\n    this.isLoading = false;\n  }\n  ngOnInit() {\n    this.signupForm = this.fb.group({\n      email: [\"\", [Validators.required, Validators.email]],\n      username: [\"\", [Validators.required]],\n      password: [\"\", [Validators.required], Validators.minLength(5)]\n    });\n  }\n  OnSignup() {\n    this.authService.CreateUser(this.signupForm.value.email, this.signupForm.value.username, this.signupForm.value.password);\n    console.log(this.signupForm.value.email, this.signupForm.value.username, this.signupForm.value.password);\n  }\n}\nSignupComponent.ɵfac = function SignupComponent_Factory(t) {\n  return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService));\n};\nSignupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SignupComponent,\n  selectors: [[\"app-signup\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[3, \"diameter\", 4, \"ngIf\"], [\"fxLayoutAlign\", \"center\", \"fxFlexFill\", \"\", \"class\", \"main-div\", 4, \"ngIf\"], [3, \"diameter\"], [\"fxLayoutAlign\", \"center\", \"fxFlexFill\", \"\", 1, \"main-div\"], [\"color\", \"primary\", \"fxFlex\", \"50\"], [1, \"signUp\", 3, \"formGroup\", \"ngSubmit\"], [\"matInput\", \"\", \"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Email\", \"required\", \"\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"Text\", \"formControlName\", \"username\", \"placeholder\", \"User Name\"], [\"matInput\", \"\", \"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"save-button\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"]],\n  template: function SignupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, SignupComponent_mat_spinner_0_Template, 1, 1, \"mat-spinner\", 0);\n      i0.ɵɵtemplate(1, SignupComponent_div_1_Template, 17, 4, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i3.NgIf, i4.MatInput, i5.MatFormField, i5.MatError, i6.MatCard, i6.MatCardTitle, i7.MatButton, i8.MatProgressSpinner],\n  styles: [\"html[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\\r\\n   height: 100%;\\r\\n}\\r\\n\\r\\nbody[_ngcontent-%COMP%] {\\r\\n   margin: 0;\\r\\n   min-height: 100vh;\\r\\n}\\r\\n\\r\\nmat-card[_ngcontent-%COMP%] {\\r\\n   width: 60%;\\r\\n   margin: auto;\\r\\n   margin-top: 50px;\\r\\n   justify-content: space-between;\\r\\n   font-family: monospace;\\r\\n   background-color: #8dd1ea;\\r\\n   border-radius: 10px;\\r\\n   box-shadow: 0px 4px 7px -1px rgb(0, 0, 0, 0.3), 0px 8px 13px 0.5px rgb(0, 0, 0, 0.16), 0px 2px 20px 0.5px rgb(0, 0, 0, 0.11);\\r\\n}\\r\\n\\r\\n.signUp[_ngcontent-%COMP%] {\\r\\n   justify-content: space-around;\\r\\n}\\r\\n\\r\\nmat-card-title[_ngcontent-%COMP%] {\\r\\n\\r\\n   margin: 20px 0;\\r\\n   color: rgb(0, 0, 0, 0.5);\\r\\n   margin-left: 20px;\\r\\n}\\r\\n\\r\\nmat-form-field[_ngcontent-%COMP%] {\\r\\n   width: 100%;\\r\\n\\r\\n}\\r\\n\\r\\nmat-form-field[_ngcontent-%COMP%], input[_ngcontent-%COMP%] {\\r\\n   width: 68%;\\r\\n   margin-left: 20px;\\r\\n\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n   margin: 20px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQXV0aC9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUcsWUFBWTtBQUNmOztBQUVBO0dBQ0csU0FBUztHQUNULGlCQUFpQjtBQUNwQjs7QUFFQTtHQUNHLFVBQVU7R0FDVixZQUFZO0dBQ1osZ0JBQWdCO0dBQ2hCLDhCQUE4QjtHQUM5QixzQkFBc0I7R0FDdEIseUJBQXlCO0dBQ3pCLG1CQUFtQjtHQUNuQiw0SEFBNEg7QUFDL0g7O0FBRUE7R0FDRyw2QkFBNkI7QUFDaEM7O0FBRUE7O0dBRUcsY0FBYztHQUNkLHdCQUF3QjtHQUN4QixpQkFBaUI7QUFDcEI7O0FBRUE7R0FDRyxXQUFXOztBQUVkOztBQUVBOztHQUVHLFVBQVU7R0FDVixpQkFBaUI7O0FBRXBCOztBQUVBO0dBQ0csWUFBWTtBQUNmIiwic291cmNlc0NvbnRlbnQiOlsiaHRtbCxcclxuYm9keSB7XHJcbiAgIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuYm9keSB7XHJcbiAgIG1hcmdpbjogMDtcclxuICAgbWluLWhlaWdodDogMTAwdmg7XHJcbn1cclxuXHJcbm1hdC1jYXJkIHtcclxuICAgd2lkdGg6IDYwJTtcclxuICAgbWFyZ2luOiBhdXRvO1xyXG4gICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgIGZvbnQtZmFtaWx5OiBtb25vc3BhY2U7XHJcbiAgIGJhY2tncm91bmQtY29sb3I6ICM4ZGQxZWE7XHJcbiAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgIGJveC1zaGFkb3c6IDBweCA0cHggN3B4IC0xcHggcmdiKDAsIDAsIDAsIDAuMyksIDBweCA4cHggMTNweCAwLjVweCByZ2IoMCwgMCwgMCwgMC4xNiksIDBweCAycHggMjBweCAwLjVweCByZ2IoMCwgMCwgMCwgMC4xMSk7XHJcbn1cclxuXHJcbi5zaWduVXAge1xyXG4gICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxufVxyXG5cclxubWF0LWNhcmQtdGl0bGUge1xyXG5cclxuICAgbWFyZ2luOiAyMHB4IDA7XHJcbiAgIGNvbG9yOiByZ2IoMCwgMCwgMCwgMC41KTtcclxuICAgbWFyZ2luLWxlZnQ6IDIwcHg7XHJcbn1cclxuXHJcbm1hdC1mb3JtLWZpZWxkIHtcclxuICAgd2lkdGg6IDEwMCU7XHJcblxyXG59XHJcblxyXG5tYXQtZm9ybS1maWVsZCxcclxuaW5wdXQge1xyXG4gICB3aWR0aDogNjglO1xyXG4gICBtYXJnaW4tbGVmdDogMjBweDtcclxuXHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgIG1hcmdpbjogMjBweDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;;;;;ICFnEC,iCAA6D;;;IAAhDA,6BAAe;;;;;IAcxBA,iCAAoD;IAAAA,wCAAwB;IAAAA,iBAAY;;;;;IAHzFA,+BAE0F;IACzFA,yFAAwF;IAEzFA,iBAAM;;;;IAFOA,eAAsC;IAAtCA,8DAAsC;;;;;IAUlDA,iCAAuD;IAAAA,wCAAwB;IAAAA,iBAAY;;;;;IAH5FA,+BAEmG;IAClGA,0FAA2F;IAE5FA,iBAAM;;;;IAFOA,eAAyC;IAAzCA,iEAAyC;;;;;IAUrDA,iCAAuD;IAAAA,wCAAwB;IAAAA,iBAAY;;;;;IAC3FA,iCAAwD;IAAAA,gCAAgB;IAAAA,iBAAY;;;;;IAJrFA,+BAEmG;IAClGA,0FAA2F;IAC3FA,0FAAoF;IACrFA,iBAAM;;;;IAFOA,eAAyC;IAAzCA,iEAAyC;IACzCA,eAA0C;IAA1CA,kEAA0C;;;;;;IAlC1DA,8BAA2E;IAGlEA,uBAAO;IAAAA,iBAAO;IAGrBA,+BAAsE;IAAxBA;MAAAA;MAAA;MAAA,OAAYA,gCAAU;IAAA,EAAC;IACpEA,sCAAgB;IACfA,2BAAoF;IACrFA,iBAAiB;IACjBA,sEAKM;IAENA,sCAAgB;IACfA,4BAAiF;IAClFA,iBAAiB;IACjBA,wEAKM;IAENA,uCAAgB;IACfA,4BAAoF;IACrFA,iBAAiB;IACjBA,wEAKM;IACNA,mCAA4E;IAACA,uBAAK;IAAAA,iBAAS;;;;IA9BvEA,eAAwB;IAAxBA,6CAAwB;IAM1CA,eAAsF;IAAtFA,4HAAsF;IAUtFA,eAA+F;IAA/FA,qIAA+F;IAU/FA,eAA+F;IAA/FA,qIAA+F;;;ADvBpG,OAAM,MAAOC,eAAe;EAI3BC,YAAoBC,EAAe,EAAUC,WAAwB;IAAjD,OAAE,GAAFD,EAAE;IAAuB,gBAAW,GAAXC,WAAW;IAHxD,cAAS,GAAG,KAAK;EAGuD;EAExEC,QAAQ;IACP,IAAI,CAACC,UAAU,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC/BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACS,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACU,QAAQ,CAAC,CAAC;MACrCE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACU,QAAQ,CAAC,EAAEV,UAAU,CAACa,SAAS,CAAC,CAAC,CAAC;KAC7D,CAAC;EACH;EAEAC,QAAQ;IACP,IAAI,CAACT,WAAW,CAACU,UAAU,CAC1B,IAAI,CAACR,UAAU,CAACS,KAAK,CAACP,KAAK,EAC3B,IAAI,CAACF,UAAU,CAACS,KAAK,CAACL,QAAQ,EAC9B,IAAI,CAACJ,UAAU,CAACS,KAAK,CAACJ,QAAQ,CAC9B;IACDK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,UAAU,CAACS,KAAK,CAACP,KAAK,EAAE,IAAI,CAACF,UAAU,CAACS,KAAK,CAACL,QAAQ,EAAE,IAAI,CAACJ,UAAU,CAACS,KAAK,CAACJ,QAAQ,CAAC;EACzG;;AArBYV,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV5BtB,gFAA6D;MAC7DA,iEAuCM;;;MAxCwBA,oCAAe;MACYA,eAAgB;MAAhBA,qCAAgB","names":["Validators","i0","SignupComponent","constructor","fb","authService","ngOnInit","signupForm","group","email","required","username","password","minLength","OnSignup","CreateUser","value","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Projects\\myPosts\\src\\app\\Auth\\signup\\signup.component.ts","C:\\Projects\\myPosts\\src\\app\\Auth\\signup\\signup.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { AuthService } from \"../auth.service\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { AuthData } from \"../auth.Model\";\n\n@Component({\n\tselector: \"app-signup\",\n\ttemplateUrl: \"./signup.component.html\",\n\tstyleUrls: [\"./signup.component.css\"],\n})\nexport class SignupComponent implements OnInit {\n\tisLoading = false;\n\tsignupForm: FormGroup;\n\n\tconstructor(private fb: FormBuilder, private authService: AuthService) {}\n\n\tngOnInit(): void {\n\t\tthis.signupForm = this.fb.group({\n\t\t\temail: [\"\", [Validators.required, Validators.email]],\n\t\t\tusername: [\"\", [Validators.required]],\n\t\t\tpassword: [\"\", [Validators.required], Validators.minLength(5)],\n\t\t});\n\t}\n\n\tOnSignup() {\n\t\tthis.authService.CreateUser(\n\t\t\tthis.signupForm.value.email,\n\t\t\tthis.signupForm.value.username,\n\t\t\tthis.signupForm.value.password\n\t\t);\n\t\tconsole.log(this.signupForm.value.email, this.signupForm.value.username, this.signupForm.value.password);\n\t}\n}\n","<mat-spinner [diameter]=\"80\" *ngIf=\"isLoading\"></mat-spinner>\n<div fxLayoutAlign=\"center\" fxFlexFill class=\"main-div\" *ngIf=\"!isLoading\">\n\t<mat-card color=\"primary\" fxFlex=\"50\">\n\t\t<mat-card-title>\n\t\t\t<span>Sign Up</span>\n\t\t</mat-card-title>\n\n\t\t<form class=\"signUp\" [formGroup]=\"signupForm\" (ngSubmit)=\"OnSignup()\">\n\t\t\t<mat-form-field>\n\t\t\t\t<input matInput type=\"email\" formControlName=\"email\" placeholder=\"Email\" required />\n\t\t\t</mat-form-field>\n\t\t\t<div\n\t\t\t\tclass=\"alert alert-danger\"\n\t\t\t\t*ngIf=\"signupForm.email.invalid && (signupForm.email.touched || signupForm.email.dirty)\">\n\t\t\t\t<mat-error *ngIf=\"signupForm.email.errors.required\">this is a required field</mat-error>\n\t\t\t\t<!-- <mat-error *ngIf=\"signupForm.errors.minlength\">Min length is 7</mat-error> -->\n\t\t\t</div>\n\n\t\t\t<mat-form-field>\n\t\t\t\t<input matInput type=\"Text\" formControlName=\"username\" placeholder=\"User Name\" />\n\t\t\t</mat-form-field>\n\t\t\t<div\n\t\t\t\tclass=\"alert alert-danger\"\n\t\t\t\t*ngIf=\"signupForm.username.invalid && (signupForm.username.touched || signupForm.username.dirty)\">\n\t\t\t\t<mat-error *ngIf=\"signupForm.username.errors.required\">this is a required field</mat-error>\n\t\t\t\t<!-- <mat-error *ngIf=\"signupForm.errors.minlength\">Min length is 7</mat-error> -->\n\t\t\t</div>\n\n\t\t\t<mat-form-field>\n\t\t\t\t<input matInput type=\"password\" formControlName=\"password\" placeholder=\"Password\" />\n\t\t\t</mat-form-field>\n\t\t\t<div\n\t\t\t\tclass=\"alert alert-danger\"\n\t\t\t\t*ngIf=\"signupForm.password.invalid && (signupForm.password.touched || signupForm.password.dirty)\">\n\t\t\t\t<mat-error *ngIf=\"signupForm.password.errors.required\">this is a required field</mat-error>\n\t\t\t\t<mat-error *ngIf=\"signupForm.password.errors.minlength\">Min length is 10</mat-error>\n\t\t\t</div>\n\t\t\t<button class=\"save-button\" mat-raised-button color=\"primary\" type=\"submit\"> LogIn</button>\n\t\t</form>\n\t</mat-card>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}