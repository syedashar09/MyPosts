{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/progress-spinner\";\nfunction LoginComponent_mat_spinner_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 2);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"diameter\", 80);\n  }\n}\nfunction LoginComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"mat-card\", 4)(2, \"mat-card-title\")(3, \"span\");\n    i0.ɵɵtext(4, \"LogIn\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"form\", 5, 6);\n    i0.ɵɵlistener(\"submit\", function LoginComponent_div_1_Template_form_submit_5_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const _r2 = i0.ɵɵreference(6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.OnLogin(_r2));\n    });\n    i0.ɵɵelementStart(7, \"mat-form-field\");\n    i0.ɵɵelement(8, \"input\", 7, 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"mat-form-field\");\n    i0.ɵɵelement(11, \"input\", 9, 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 11);\n    i0.ɵɵtext(14, \" LogIn\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nexport class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.isLoading = false;\n  }\n  ngOnInit() {}\n  OnLogin(loginForm) {\n    if (loginForm.invalid) return null;\n    this.authService.logInUser(loginForm.value.email, loginForm.value.password);\n    loginForm.reset();\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[3, \"diameter\", 4, \"ngIf\"], [\"fxLayoutAlign\", \"center\", \"fxFlexFill\", \"\", \"class\", \"main-div\", 4, \"ngIf\"], [3, \"diameter\"], [\"fxLayoutAlign\", \"center\", \"fxFlexFill\", \"\", 1, \"main-div\"], [\"color\", \"primary\", \"fxFlex\", \"50\"], [3, \"submit\"], [\"loginForm\", \"ngForm\"], [\"matInput\", \"\", \"type\", \"email\", \"name\", \"email\", \"ngModel\", \"\", \"placeholder\", \"Email\", \"required\", \"\"], [\"emailInput\", \"ngModel\"], [\"matInput\", \"\", \"type\", \"password\", \"name\", \"password\", \"ngModel\", \"\", \"placeholder\", \"Password\"], [\"passwordInput\", \"ngModel\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"save-button\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, LoginComponent_mat_spinner_0_Template, 1, 1, \"mat-spinner\", 0);\n      i0.ɵɵtemplate(1, LoginComponent_div_1_Template, 15, 0, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, i4.NgIf, i5.MatInput, i6.MatFormField, i7.MatCard, i7.MatCardTitle, i8.MatButton, i9.MatProgressSpinner],\n  styles: [\"html[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\\r\\n   height: 100%;\\r\\n}\\r\\n\\r\\nbody[_ngcontent-%COMP%] {\\r\\n   margin: 0;\\r\\n   min-height: 100vh;\\r\\n}\\r\\n\\r\\nmat-card[_ngcontent-%COMP%] {\\r\\n   width: 60%;\\r\\n   margin: auto;\\r\\n   margin-top: 50px;\\r\\n   justify-content: center;\\r\\n   font-family: monospace;\\r\\n   background-color: #8dd1ea;\\r\\n   border-radius: 10px;\\r\\n   box-shadow: 0px 4px 7px -1px rgb(0, 0, 0, 0.3), 0px 8px 13px 0.5px rgb(0, 0, 0, 0.16), 0px 2px 20px 0.5px rgb(0, 0, 0, 0.11);\\r\\n}\\r\\n\\r\\nmat-card-title[_ngcontent-%COMP%] {\\r\\n\\r\\n   margin: 20px 0;\\r\\n   color: rgb(0, 0, 0, 0.5);\\r\\n   margin-left: 20px;\\r\\n}\\r\\n\\r\\nmat-form-field[_ngcontent-%COMP%] {\\r\\n   width: 100%;\\r\\n\\r\\n}\\r\\n\\r\\nmat-form-field[_ngcontent-%COMP%], input[_ngcontent-%COMP%] {\\r\\n   width: 68%;\\r\\n   margin-left: 20px;\\r\\n\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n   margin: 20px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHLFlBQVk7QUFDZjs7QUFFQTtHQUNHLFNBQVM7R0FDVCxpQkFBaUI7QUFDcEI7O0FBRUE7R0FDRyxVQUFVO0dBQ1YsWUFBWTtHQUNaLGdCQUFnQjtHQUNoQix1QkFBdUI7R0FDdkIsc0JBQXNCO0dBQ3RCLHlCQUF5QjtHQUN6QixtQkFBbUI7R0FDbkIsNEhBQTRIO0FBQy9IOztBQUVBOztHQUVHLGNBQWM7R0FDZCx3QkFBd0I7R0FDeEIsaUJBQWlCO0FBQ3BCOztBQUVBO0dBQ0csV0FBVzs7QUFFZDs7QUFFQTs7R0FFRyxVQUFVO0dBQ1YsaUJBQWlCOztBQUVwQjs7QUFFQTtHQUNHLFlBQVk7QUFDZiIsInNvdXJjZXNDb250ZW50IjpbImh0bWwsXHJcbmJvZHkge1xyXG4gICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbmJvZHkge1xyXG4gICBtYXJnaW46IDA7XHJcbiAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xyXG59XHJcblxyXG5tYXQtY2FyZCB7XHJcbiAgIHdpZHRoOiA2MCU7XHJcbiAgIG1hcmdpbjogYXV0bztcclxuICAgbWFyZ2luLXRvcDogNTBweDtcclxuICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgIGZvbnQtZmFtaWx5OiBtb25vc3BhY2U7XHJcbiAgIGJhY2tncm91bmQtY29sb3I6ICM4ZGQxZWE7XHJcbiAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgIGJveC1zaGFkb3c6IDBweCA0cHggN3B4IC0xcHggcmdiKDAsIDAsIDAsIDAuMyksIDBweCA4cHggMTNweCAwLjVweCByZ2IoMCwgMCwgMCwgMC4xNiksIDBweCAycHggMjBweCAwLjVweCByZ2IoMCwgMCwgMCwgMC4xMSk7XHJcbn1cclxuXHJcbm1hdC1jYXJkLXRpdGxlIHtcclxuXHJcbiAgIG1hcmdpbjogMjBweCAwO1xyXG4gICBjb2xvcjogcmdiKDAsIDAsIDAsIDAuNSk7XHJcbiAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xyXG59XHJcblxyXG5tYXQtZm9ybS1maWVsZCB7XHJcbiAgIHdpZHRoOiAxMDAlO1xyXG5cclxufVxyXG5cclxubWF0LWZvcm0tZmllbGQsXHJcbmlucHV0IHtcclxuICAgd2lkdGg6IDY4JTtcclxuICAgbWFyZ2luLWxlZnQ6IDIwcHg7XHJcblxyXG59XHJcblxyXG5idXR0b24ge1xyXG4gICBtYXJnaW46IDIwcHg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;;IAAAA,iCAA6D;;;IAAhDA,6BAAe;;;;;;IAC5BA,8BAA2E;IAGlEA,qBAAK;IAAAA,iBAAO;IAGnBA,kCAAwD;IAAlDA;MAAAA;MAAA;MAAA;MAAA,OAAUA,kCAAkB;IAAA,EAAC;IAClCA,sCAAgB;IACfA,8BAAuG;IACxGA,iBAAiB;IAMjBA,uCAAgB;IACfA,gCAA0G;IAC3GA,iBAAiB;IAKjBA,mCAA4E;IAACA,uBAAK;IAAAA,iBAAS;;;ACb9F,OAAM,MAAOC,cAAc;EAG1BC,YAAmBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;IAF3D,cAAS,GAAG,KAAK;EAEqD;EAEtEC,QAAQ,IAAU;EAClBC,OAAO,CAACC,SAAiB;IACxB,IAAIA,SAAS,CAACC,OAAO,EAAE,OAAO,IAAI;IAClC,IAAI,CAACL,WAAW,CAACM,SAAS,CAACF,SAAS,CAACG,KAAK,CAACC,KAAK,EAAEJ,SAAS,CAACG,KAAK,CAACE,QAAQ,CAAC;IAC3EL,SAAS,CAACM,KAAK,EAAE;EAClB;;AAVYZ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV3BlB,+EAA6D;MAC7DA,gEAyBM;;;MA1BwBA,oCAAe;MACYA,eAAgB;MAAhBA,qCAAgB","names":["i0","LoginComponent","constructor","authService","router","ngOnInit","OnLogin","loginForm","invalid","logInUser","value","email","password","reset","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Projects\\myPosts\\src\\app\\Auth\\login\\login.component.html","C:\\Projects\\myPosts\\src\\app\\Auth\\login\\login.component.ts"],"sourcesContent":["<mat-spinner [diameter]=\"80\" *ngIf=\"isLoading\"></mat-spinner>\n<div fxLayoutAlign=\"center\" fxFlexFill class=\"main-div\" *ngIf=\"!isLoading\">\n\t<mat-card color=\"primary\" fxFlex=\"50\">\n\t\t<mat-card-title>\n\t\t\t<span>LogIn</span>\n\t\t</mat-card-title>\n\n\t\t<form (submit)=\"OnLogin(loginForm)\" #loginForm=\"ngForm\">\n\t\t\t<mat-form-field>\n\t\t\t\t<input matInput type=\"email\" name=\"email\" ngModel #emailInput=\"ngModel\" placeholder=\"Email\" required />\n\t\t\t</mat-form-field>\n\t\t\t<!-- <div class=\"alert alert-danger\" *ngIf=\"title.invalid && (title.touched || title.dirty)\">\n\t\t\t\t<mat-error *ngIf=\"title.errors.required\">this is a required field</mat-error>\n\t\t\t\t<mat-error *ngIf=\"title.errors.minlength\">Min length is 7</mat-error>\n\t\t\t</div> -->\n\n\t\t\t<mat-form-field>\n\t\t\t\t<input matInput type=\"password\" name=\"password\" ngModel #passwordInput=\"ngModel\" placeholder=\"Password\" />\n\t\t\t</mat-form-field>\n\t\t\t<!-- <div class=\"alert alert-danger\" *ngIf=\"content.invalid && (content.touched || content.dirty)\">\n\t\t\t\t<mat-error *ngIf=\"content.errors.required\">this is a required field</mat-error>\n\t\t\t\t<mat-error *ngIf=\"content.errors.minlength\">Min length is 10</mat-error>\n\t\t\t</div> -->\n\t\t\t<button class=\"save-button\" mat-raised-button color=\"primary\" type=\"submit\"> LogIn</button>\n\t\t</form>\n\t</mat-card>\n</div>","import { Component, OnInit } from \"@angular/core\";\nimport { Validators, NgForm } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"../auth.service\";\n\n@Component({\n\tselector: \"app-login\",\n\ttemplateUrl: \"./login.component.html\",\n\tstyleUrls: [\"./login.component.css\"],\n})\nexport class LoginComponent implements OnInit {\n\tisLoading = false;\n\n\tconstructor(public authService: AuthService, private router: Router) {}\n\n\tngOnInit(): void {}\n\tOnLogin(loginForm: NgForm) {\n\t\tif (loginForm.invalid) return null;\n\t\tthis.authService.logInUser(loginForm.value.email, loginForm.value.password);\n\t\tloginForm.reset();\n\t}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}