{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport { mimeType } from \"./mime-type.validator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../posts.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/progress-spinner\";\nfunction PostCreateComponent_mat_spinner_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 2);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"diameter\", 80);\n  }\n}\nfunction PostCreateComponent_div_1_div_8_mat_error_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"this is a required field\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PostCreateComponent_div_1_div_8_mat_error_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Min length is 7\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PostCreateComponent_div_1_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, PostCreateComponent_div_1_div_8_mat_error_1_Template, 2, 0, \"mat-error\", 16);\n    i0.ɵɵtemplate(2, PostCreateComponent_div_1_div_8_mat_error_2_Template, 2, 0, \"mat-error\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.title.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.title.errors.minlength);\n  }\n}\nfunction PostCreateComponent_div_1_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelement(1, \"img\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r4.imagePreview, i0.ɵɵsanitizeUrl)(\"alt\", ctx_r4.myform.value.title);\n  }\n}\nfunction PostCreateComponent_div_1_div_17_mat_error_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"this is a required field\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PostCreateComponent_div_1_div_17_mat_error_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Min length is 10\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PostCreateComponent_div_1_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, PostCreateComponent_div_1_div_17_mat_error_1_Template, 2, 0, \"mat-error\", 16);\n    i0.ɵɵtemplate(2, PostCreateComponent_div_1_div_17_mat_error_2_Template, 2, 0, \"mat-error\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.content.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.content.errors.minlength);\n  }\n}\nfunction PostCreateComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"mat-card\", 4)(2, \"mat-card-title\")(3, \"span\");\n    i0.ɵɵtext(4, \"Create A Post !\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"form\", 5);\n    i0.ɵɵlistener(\"ngSubmit\", function PostCreateComponent_div_1_Template_form_ngSubmit_5_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.OnSavepost());\n    });\n    i0.ɵɵelementStart(6, \"mat-form-field\");\n    i0.ɵɵelement(7, \"input\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, PostCreateComponent_div_1_div_8_Template, 3, 2, \"div\", 7);\n    i0.ɵɵelementStart(9, \"div\", 8)(10, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function PostCreateComponent_div_1_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const _r3 = i0.ɵɵreference(13);\n      return i0.ɵɵresetView(_r3.click());\n    });\n    i0.ɵɵtext(11, \"Upload Image\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 10, 11);\n    i0.ɵɵlistener(\"change\", function PostCreateComponent_div_1_Template_input_change_12_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.OnImagePicked($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(14, PostCreateComponent_div_1_div_14_Template, 2, 2, \"div\", 12);\n    i0.ɵɵelementStart(15, \"mat-form-field\");\n    i0.ɵɵelement(16, \"textarea\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(17, PostCreateComponent_div_1_div_17_Template, 3, 2, \"div\", 7);\n    i0.ɵɵelementStart(18, \"button\", 14);\n    i0.ɵɵtext(19, \" Save Post \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.myform);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.title.invalid && (ctx_r1.title.touched || ctx_r1.title.dirty));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.imagePreview !== \"\" && ctx_r1.imagePreview && ctx_r1.myform.get(\"image\").valid);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.content.invalid && (ctx_r1.content.touched || ctx_r1.content.dirty));\n  }\n}\nexport class PostCreateComponent {\n  constructor(postservice, route, fb, router) {\n    this.postservice = postservice;\n    this.route = route;\n    this.fb = fb;\n    this.router = router;\n    this.isLoading = false;\n    this.mode = \"create\";\n  }\n  ngOnInit() {\n    this.Form();\n    this.route.paramMap.subscribe(paramMap => {\n      if (paramMap.has(\"postId\")) {\n        this.mode = \"edit\";\n        this.postId = paramMap.get(\"postId\");\n        this.isLoading = true;\n        this.postservice.getpost(this.postId).subscribe(postData => {\n          this.isLoading = false;\n          this.post = {\n            id: postData._id,\n            title: postData.title,\n            content: postData.content,\n            imagePath: postData.imagePath\n          };\n          this.myform.patchValue({\n            title: this.post.title,\n            content: this.post.content,\n            image: this.post.imagePath\n          });\n        });\n        // console.log(this.post.title, this.post.content);\n      } else {\n        this.mode = \"create\";\n        this.postId = \"\";\n      }\n    });\n  }\n  OnSavepost() {\n    if (this.myform.invalid) return;\n    // this.myform.value.image\n    this.isLoading = true;\n    if (this.mode === \"create\") {\n      this.postservice.addposts(this.myform.value.title, this.myform.value.content, this.myform.value.image);\n      console.log(this.myform.value.title);\n      console.log(this.myform.value.content);\n    } else {\n      this.postservice.UpdatePost(this.postId, this.myform.value.title, this.myform.value.content, this.myform.value.image);\n      this.router.navigate([\"/\"]);\n    }\n    this.myform.reset();\n  }\n  OnImagePicked(event) {\n    // const { target } = event;\n    const eTarget = event.target;\n    if (eTarget.files) {\n      this.file = eTarget.files[0];\n    }\n    this.myform.patchValue({\n      image: this.file\n    });\n    this.myform.get(\"image\").updateValueAndValidity;\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result;\n    };\n    reader.readAsDataURL(this.file);\n  }\n  //either define constant or function to get form value\n  // get title() {\n  // \treturn this.myform.get('title');\n  // }\n  // get content() {\n  // \treturn this.myform.get('content');\n  // }\n  Form() {\n    this.myform = this.fb.group({\n      title: [null, [Validators.required, Validators.minLength(5)]],\n      content: [null, [Validators.required, Validators.minLength(7)]],\n      image: [null, {\n        Validators: [Validators.required],\n        asyncValidators: [mimeType]\n      }]\n    });\n    // {  }\n    this.title = this.myform.get(\"title\");\n    this.content = this.myform.get(\"content\");\n  }\n}\nPostCreateComponent.ɵfac = function PostCreateComponent_Factory(t) {\n  return new (t || PostCreateComponent)(i0.ɵɵdirectiveInject(i1.postsService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i2.Router));\n};\nPostCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostCreateComponent,\n  selectors: [[\"app-post-create\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[3, \"diameter\", 4, \"ngIf\"], [\"fxLayoutAlign\", \"center\", \"fxFlexFill\", \"\", \"class\", \"main-div\", 4, \"ngIf\"], [3, \"diameter\"], [\"fxLayoutAlign\", \"center\", \"fxFlexFill\", \"\", 1, \"main-div\"], [\"color\", \"primary\", \"fxFlex\", \"50\"], [3, \"formGroup\", \"ngSubmit\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"title\", \"placeholder\", \"Post Title\", \"required\", \"\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"image-upload\"], [\"type\", \"button\", 1, \"upload\", \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"file\", 1, \"image-upload\", 3, \"change\"], [\"filePicker\", \"\"], [\"class\", \"image-preview\", 4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"textarea\", \"formControlName\", \"content\", \"placeholder\", \"Post Content\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", \"type\", \"submit\", 1, \"save-button\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"], [1, \"image-preview\"], [3, \"src\", \"alt\"]],\n  template: function PostCreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, PostCreateComponent_mat_spinner_0_Template, 1, 1, \"mat-spinner\", 0);\n      i0.ɵɵtemplate(1, PostCreateComponent_div_1_Template, 20, 4, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName, i4.NgIf, i5.MatInput, i6.MatFormField, i6.MatError, i7.MatCard, i7.MatCardTitle, i8.MatButton, i9.MatProgressSpinner],\n  styles: [\"mat-card[_ngcontent-%COMP%] {\\r\\n  width: 80%;\\r\\n  margin: auto;\\r\\n  margin-top: 50px;\\r\\n  justify-content: center;\\r\\n  font-family: monospace;\\r\\n  background-color: #CCEA8D;\\r\\n  border-radius: 10px;\\r\\n}\\r\\n\\r\\nmat-form-field[_ngcontent-%COMP%], input[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%] {\\r\\n  margin-left: 20px;\\r\\n  width: 68%;\\r\\n}\\r\\n\\r\\nmat-spinner[_ngcontent-%COMP%] {\\r\\n  margin: auto;\\r\\n\\r\\n\\r\\n}\\r\\n\\r\\nmat-card-title[_ngcontent-%COMP%] {\\r\\n  margin: 20px 0px;\\r\\n  color: rgb(0, 0, 0, 0.5);\\r\\n  margin-left: 20px;\\r\\n}\\r\\n\\r\\n.save-button[_ngcontent-%COMP%] {\\r\\n\\r\\n  margin: 1rem 1rem;\\r\\n  justify-content: baseline;\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\ndiv.image-upload[_ngcontent-%COMP%] {\\r\\n  margin: 1rem 2rem;\\r\\n}\\r\\n\\r\\ninput.image-upload[_ngcontent-%COMP%] {\\r\\n  visibility: hidden;\\r\\n}\\r\\n\\r\\n.image-preview[_ngcontent-%COMP%] {\\r\\n  height: 7.5rem;\\r\\n  margin: 1rem 2rem;\\r\\n}\\r\\n\\r\\n.image-preview[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\r\\n  height: 100%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcG9zdHMvcG9zdC1jcmVhdGUvcG9zdC1jcmVhdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQVU7RUFDVixZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLHVCQUF1QjtFQUN2QixzQkFBc0I7RUFDdEIseUJBQXlCO0VBQ3pCLG1CQUFtQjtBQUNyQjs7QUFFQTs7O0VBR0UsaUJBQWlCO0VBQ2pCLFVBQVU7QUFDWjs7QUFFQTtFQUNFLFlBQVk7OztBQUdkOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLHdCQUF3QjtFQUN4QixpQkFBaUI7QUFDbkI7O0FBRUE7O0VBRUUsaUJBQWlCO0VBQ2pCLHlCQUF5Qjs7QUFFM0I7O0FBRUE7Ozs7O0dBS0c7O0FBRUg7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsWUFBWTtBQUNkIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWNhcmQge1xyXG4gIHdpZHRoOiA4MCU7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG4gIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQ0NFQThEO1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbn1cclxuXHJcbm1hdC1mb3JtLWZpZWxkLFxyXG5pbnB1dCxcclxudGV4dGFyZWEge1xyXG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xyXG4gIHdpZHRoOiA2OCU7XHJcbn1cclxuXHJcbm1hdC1zcGlubmVyIHtcclxuICBtYXJnaW46IGF1dG87XHJcblxyXG5cclxufVxyXG5cclxubWF0LWNhcmQtdGl0bGUge1xyXG4gIG1hcmdpbjogMjBweCAwcHg7XHJcbiAgY29sb3I6IHJnYigwLCAwLCAwLCAwLjUpO1xyXG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xyXG59XHJcblxyXG4uc2F2ZS1idXR0b24ge1xyXG5cclxuICBtYXJnaW46IDFyZW0gMXJlbTtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGJhc2VsaW5lO1xyXG5cclxufVxyXG5cclxuLyogI2J1dHRvbiB7XHJcbiAgZm9udC1zaXplOiAxLjJyZW07XHJcbiAganVzdGlmeS1jb250ZW50OiBiYXNlbGluZTtcclxuICBtYXJnaW4tbGVmdDogMTAwcHg7XHJcbiAgbWFyZ2luLXRvcDogMjBweDtcclxufSAqL1xyXG5cclxuZGl2LmltYWdlLXVwbG9hZCB7XHJcbiAgbWFyZ2luOiAxcmVtIDJyZW07XHJcbn1cclxuXHJcbmlucHV0LmltYWdlLXVwbG9hZCB7XHJcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG59XHJcblxyXG4uaW1hZ2UtcHJldmlldyB7XHJcbiAgaGVpZ2h0OiA3LjVyZW07XHJcbiAgbWFyZ2luOiAxcmVtIDJyZW07XHJcbn1cclxuXHJcbi5pbWFnZS1wcmV2aWV3IGltZyB7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","mimeType","i0","PostCreateComponent","constructor","postservice","route","fb","router","ngOnInit","Form","paramMap","subscribe","has","mode","postId","get","isLoading","getpost","postData","post","id","_id","title","content","imagePath","myform","patchValue","image","OnSavepost","invalid","addposts","value","console","log","UpdatePost","navigate","reset","OnImagePicked","event","eTarget","target","files","file","updateValueAndValidity","reader","FileReader","onload","imagePreview","result","readAsDataURL","group","required","minLength","asyncValidators","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Projects\\myPosts\\src\\app\\posts\\post-create\\post-create.component.ts","C:\\Projects\\myPosts\\src\\app\\posts\\post-create\\post-create.component.html"],"sourcesContent":["import { NgPlural } from \"@angular/common\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormControl, FormGroup, NgForm, NG_ASYNC_VALIDATORS, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, ParamMap, Router } from \"@angular/router\";\nimport { post } from \"../post.model\";\nimport { postsService } from \"../posts.service\";\nimport { mimeType } from \"./mime-type.validator\";\n\n@Component({\n\tselector: \"app-post-create\",\n\ttemplateUrl: \"./post-create.component.html\",\n\tstyleUrls: [\"./post-create.component.css\"],\n})\nexport class PostCreateComponent implements OnInit {\n\ttitle: any;\n\tcontent: any;\n\tisLoading = false;\n\tprivate mode = \"create\";\n\tpublic post!: post;\n\tprivate postId: any;\n\timagePreview: any;\n\timage!: File;\n\tmyform!: FormGroup;\n\tfile!: File;\n\n\tconstructor(\n\t\tprivate postservice: postsService,\n\t\tpublic route: ActivatedRoute,\n\t\tprivate fb: FormBuilder,\n\t\tprivate router: Router\n\t) {}\n\n\tngOnInit(): void {\n\t\tthis.Form();\n\t\tthis.route.paramMap.subscribe((paramMap: ParamMap) => {\n\t\t\tif (paramMap.has(\"postId\")) {\n\t\t\t\tthis.mode = \"edit\";\n\t\t\t\tthis.postId = paramMap.get(\"postId\");\n\t\t\t\tthis.isLoading = true;\n\t\t\t\tthis.postservice.getpost(this.postId).subscribe(postData => {\n\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\tthis.post = {\n\t\t\t\t\t\tid: postData._id,\n\t\t\t\t\t\ttitle: postData.title,\n\t\t\t\t\t\tcontent: postData.content,\n\t\t\t\t\t\timagePath: postData.imagePath,\n\t\t\t\t\t};\n\t\t\t\t\tthis.myform.patchValue({\n\t\t\t\t\t\ttitle: this.post.title,\n\t\t\t\t\t\tcontent: this.post.content,\n\t\t\t\t\t\timage: this.post.imagePath,\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t// console.log(this.post.title, this.post.content);\n\t\t\t} else {\n\t\t\t\tthis.mode = \"create\";\n\t\t\t\tthis.postId = \"\";\n\t\t\t}\n\t\t});\n\t}\n\n\tOnSavepost() {\n\t\tif (this.myform.invalid) return;\n\t\t// this.myform.value.image\n\t\tthis.isLoading = true;\n\t\tif (this.mode === \"create\") {\n\t\t\tthis.postservice.addposts(this.myform.value.title, this.myform.value.content, this.myform.value.image);\n\t\t\tconsole.log(this.myform.value.title);\n\t\t\tconsole.log(this.myform.value.content);\n\t\t} else {\n\t\t\tthis.postservice.UpdatePost(\n\t\t\t\tthis.postId,\n\t\t\t\tthis.myform.value.title,\n\t\t\t\tthis.myform.value.content,\n\t\t\t\tthis.myform.value.image\n\t\t\t);\n\t\t\tthis.router.navigate([\"/\"]);\n\t\t}\n\t\tthis.myform.reset();\n\t}\n\n\tOnImagePicked(event: Event) {\n\t\t// const { target } = event;\n\t\tconst eTarget = event.target as HTMLInputElement;\n\n\t\tif (eTarget.files) {\n\t\t\tthis.file = eTarget.files[0];\n\t\t}\n\t\tthis.myform.patchValue({ image: this.file });\n\n\t\tthis.myform.get(\"image\").updateValueAndValidity;\n\t\tconst reader = new FileReader();\n\t\treader.onload = () => {\n\t\t\tthis.imagePreview = reader.result;\n\t\t};\n\t\treader.readAsDataURL(this.file);\n\t}\n\t//either define constant or function to get form value\n\t// get title() {\n\t// \treturn this.myform.get('title');\n\t// }\n\t// get content() {\n\t// \treturn this.myform.get('content');\n\t// }\n\n\tForm() {\n\t\tthis.myform = this.fb.group({\n\t\t\ttitle: [null, [Validators.required, Validators.minLength(5)]],\n\t\t\tcontent: [null, [Validators.required, Validators.minLength(7)]],\n\t\t\timage: [null, { Validators: [Validators.required], asyncValidators: [mimeType] }],\n\t\t});\n\t\t// {  }\n\t\tthis.title = this.myform.get(\"title\");\n\t\tthis.content = this.myform.get(\"content\");\n\t}\n}\n","<mat-spinner [diameter]=\"80\" *ngIf=\"isLoading\"></mat-spinner>\n<div fxLayoutAlign=\"center\" fxFlexFill class=\"main-div\" *ngIf=\"!isLoading\">\n\t<mat-card color=\"primary\" fxFlex=\"50\">\n\t\t<mat-card-title>\n\t\t\t<span>Create A Post !</span>\n\t\t</mat-card-title>\n\n\t\t<form [formGroup]=\"myform\" (ngSubmit)=\"OnSavepost()\">\n\t\t\t<mat-form-field>\n\t\t\t\t<input matInput type=\"text\" formControlName=\"title\" placeholder=\"Post Title\" required />\n\t\t\t</mat-form-field>\n\t\t\t<div class=\"alert alert-danger\" *ngIf=\"title.invalid && (title.touched || title.dirty)\">\n\t\t\t\t<mat-error *ngIf=\"title.errors.required\">this is a required field</mat-error>\n\t\t\t\t<mat-error *ngIf=\"title.errors.minlength\">Min length is 7</mat-error>\n\t\t\t</div>\n\t\t\t<div class=\"image-upload\">\n\t\t\t\t<button class=\"upload btn btn-primary\" type=\"button\" (click)=\"filePicker.click()\">Upload Image</button>\n\t\t\t\t<input class=\"image-upload\" type=\"file\" #filePicker (change)=\"OnImagePicked($event)\" />\n\t\t\t</div>\n\t\t\t<div class=\"image-preview\" *ngIf=\"imagePreview !== '' && imagePreview && myform.get('image').valid\">\n\t\t\t\t<img [src]=\"imagePreview\" [alt]=\"myform.value.title\" />\n\t\t\t</div>\n\n\t\t\t<mat-form-field>\n\t\t\t\t<textarea matInput type=\"textarea\" formControlName=\"content\" placeholder=\"Post Content\"></textarea>\n\t\t\t</mat-form-field>\n\t\t\t<div class=\"alert alert-danger\" *ngIf=\"content.invalid && (content.touched || content.dirty)\">\n\t\t\t\t<mat-error *ngIf=\"content.errors.required\">this is a required field</mat-error>\n\t\t\t\t<mat-error *ngIf=\"content.errors.minlength\">Min length is 10</mat-error>\n\t\t\t</div>\n\t\t\t<button class=\"save-button\" mat-raised-button color=\"accent\" type=\"submit\"> Save Post </button>\n\t\t</form>\n\t</mat-card>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}