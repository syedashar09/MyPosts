{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../posts.service\";\nimport * as i2 from \"src/app/Auth/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/progress-spinner\";\nimport * as i7 from \"@angular/material/expansion\";\nimport * as i8 from \"@angular/material/paginator\";\nfunction PostListComponent_mat_spinner_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 5);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"diameter\", 80);\n  }\n}\nconst _c0 = function (a1) {\n  return [\"/edit\", a1];\n};\nfunction PostListComponent_mat_accordion_2_mat_expansion_panel_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-expansion-panel\")(1, \"mat-expansion-panel-header\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 8);\n    i0.ɵɵelement(4, \"img\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"mat-action-row\")(8, \"a\", 10);\n    i0.ɵɵtext(9, \"EDIT\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function PostListComponent_mat_accordion_2_mat_expansion_panel_1_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const post_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.OnDelete(post_r5.id));\n    });\n    i0.ɵɵtext(11, \" DELETE \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const post_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", post_r5 == null ? null : post_r5.title, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", post_r5 == null ? null : post_r5.imagePath, i0.ɵɵsanitizeUrl)(\"alt\", post_r5.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r5 == null ? null : post_r5.content);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(5, _c0, post_r5.id));\n  }\n}\nfunction PostListComponent_mat_accordion_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-accordion\", 6);\n    i0.ɵɵtemplate(1, PostListComponent_mat_accordion_2_mat_expansion_panel_1_Template, 12, 7, \"mat-expansion-panel\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.posts);\n  }\n}\nfunction PostListComponent_mat_paginator_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-paginator\", 12);\n    i0.ɵɵlistener(\"page\", function PostListComponent_mat_paginator_3_Template_mat_paginator_page_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onChangePage($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"length\", ctx_r2.totalPosts)(\"pageSize\", ctx_r2.postsPerPage)(\"pageSizeOptions\", ctx_r2.pageSizeOptions);\n  }\n}\nfunction PostListComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 13);\n    i0.ɵɵtext(1, \" No posts added yet! \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class PostListComponent {\n  constructor(postservice, authService) {\n    this.postservice = postservice;\n    this.authService = authService;\n    this.isLoading = false;\n    this.posts = [];\n    this.totalPosts = 0;\n    this.currentPage = 1;\n    this.postsPerPage = 2;\n    this.pageSizeOptions = [1, 2, 4, 6, 10, 15, 20];\n    this.pageIndex = 3;\n    this.userAuthenticated = false;\n  }\n  ngOnInit() {\n    this.isLoading = true;\n    this.postservice.getPosts(2, 1);\n    this.postSub = this.postservice.getPostUpdateListener().subscribe(postData => {\n      this.isLoading = false;\n      this.posts = postData.posts;\n      this.totalPosts = postData.postCount;\n    });\n    this.userId = this.authService.getUserId();\n    this.userAuthenticated = this.authService.getIsAuth();\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\n      this.isLoading = false;\n      this.userAuthenticated = isAuthenticated;\n      this.userId = this.authService.getUserId();\n    });\n  }\n  OnDelete(paramId) {\n    this.isLoading = true;\n    this.postservice.DeletePosts(paramId).subscribe(() => {\n      this.postservice.getPosts(this.postsPerPage, this.currentPage);\n    }), error => {\n      this.isLoading = false;\n    };\n  }\n  onChangePage(pageEvent) {\n    this.isLoading = true;\n    this.currentPage = pageEvent.pageIndex + 1;\n    this.postsPerPage = pageEvent.pageSize;\n    this.postservice.getPosts(this.postsPerPage, this.currentPage);\n  }\n  ngOnDestroy() {\n    this.postSub.unsubscribe();\n    this.authStatusSub.unsubscribe();\n  }\n}\nPostListComponent.ɵfac = function PostListComponent_Factory(t) {\n  return new (t || PostListComponent)(i0.ɵɵdirectiveInject(i1.postsService), i0.ɵɵdirectiveInject(i2.AuthService));\n};\nPostListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostListComponent,\n  selectors: [[\"app-post-list\"]],\n  decls: 5,\n  vars: 4,\n  consts: [[\"color\", \"primary\", 3, \"diameter\", 4, \"ngIf\"], [1, \"postLists\"], [\"multi\", \"true\", 4, \"ngIf\"], [3, \"length\", \"pageSize\", \"pageSizeOptions\", \"page\", 4, \"ngIf\"], [\"class\", \"info-text mat-body-1\", 4, \"ngIf\"], [\"color\", \"primary\", 3, \"diameter\"], [\"multi\", \"true\"], [4, \"ngFor\", \"ngForOf\"], [1, \"post-image\"], [3, \"src\", \"alt\"], [\"mat-button\", \"\", \"color\", \"primary\", 3, \"routerLink\"], [\"mat-button\", \"\", \"color\", \"warn\", 3, \"click\"], [3, \"length\", \"pageSize\", \"pageSizeOptions\", \"page\"], [1, \"info-text\", \"mat-body-1\"]],\n  template: function PostListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, PostListComponent_mat_spinner_0_Template, 1, 1, \"mat-spinner\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵtemplate(2, PostListComponent_mat_accordion_2_Template, 2, 1, \"mat-accordion\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, PostListComponent_mat_paginator_3_Template, 1, 3, \"mat-paginator\", 3);\n      i0.ɵɵtemplate(4, PostListComponent_p_4_Template, 2, 0, \"p\", 4);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.posts.length > 0 && !ctx.isLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.posts.length > 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.posts.length <= 0 && !ctx.isLoading);\n    }\n  },\n  dependencies: [i3.RouterLink, i4.NgForOf, i4.NgIf, i5.MatAnchor, i5.MatButton, i6.MatProgressSpinner, i7.MatAccordion, i7.MatExpansionPanel, i7.MatExpansionPanelActionRow, i7.MatExpansionPanelHeader, i8.MatPaginator],\n  styles: [\"mat-spinner[_ngcontent-%COMP%] {\\r\\n    margin: auto;\\r\\n    text-align: center;\\r\\n\\r\\n}\\r\\n\\r\\n.postLists[_ngcontent-%COMP%] {\\r\\n    margin: auto;\\r\\n    width: 90%;\\r\\n    margin-top: 40px;\\r\\n    z-index: 2;\\r\\n}\\r\\n\\r\\n.post-image[_ngcontent-%COMP%] {\\r\\n    width: 50%;\\r\\n    height: 50%;\\r\\n    margin: 12px\\r\\n}\\r\\n\\r\\n.post-image[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    box-shadow: 10px 10px 15px 2px rgba(0, 0, 0, .5);\\r\\n}\\r\\n\\r\\nmat-paginator[_ngcontent-%COMP%] {\\r\\n    margin-top: 20px;\\r\\n    margin-right: 40px\\r\\n}\\r\\n\\r\\n.info-text[_ngcontent-%COMP%] {\\r\\n    \\r\\n    text-align: center;\\r\\n    margin: auto;\\r\\n\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcG9zdHMvcG9zdC1saXN0L3Bvc3QtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGtCQUFrQjs7QUFFdEI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osVUFBVTtJQUNWLGdCQUFnQjtJQUNoQixVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsV0FBVztJQUNYO0FBQ0o7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsZ0RBQWdEO0FBQ3BEOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCO0FBQ0o7O0FBRUE7SUFDSSw2QkFBNkI7SUFDN0Isa0JBQWtCO0lBQ2xCLFlBQVk7O0FBRWhCIiwic291cmNlc0NvbnRlbnQiOlsibWF0LXNwaW5uZXIge1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxufVxyXG5cclxuLnBvc3RMaXN0cyB7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICB3aWR0aDogOTAlO1xyXG4gICAgbWFyZ2luLXRvcDogNDBweDtcclxuICAgIHotaW5kZXg6IDI7XHJcbn1cclxuXHJcbi5wb3N0LWltYWdlIHtcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgICBoZWlnaHQ6IDUwJTtcclxuICAgIG1hcmdpbjogMTJweFxyXG59XHJcblxyXG4ucG9zdC1pbWFnZSBpbWcge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBib3gtc2hhZG93OiAxMHB4IDEwcHggMTVweCAycHggcmdiYSgwLCAwLCAwLCAuNSk7XHJcbn1cclxuXHJcbm1hdC1wYWdpbmF0b3Ige1xyXG4gICAgbWFyZ2luLXRvcDogMjBweDtcclxuICAgIG1hcmdpbi1yaWdodDogNDBweFxyXG59XHJcblxyXG4uaW5mby10ZXh0IHtcclxuICAgIC8qIGp1c3RpZnktY29udGVudDogY2VudGVyOyAqL1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG5cclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","PostListComponent","constructor","postservice","authService","ngOnInit","isLoading","getPosts","postSub","getPostUpdateListener","subscribe","postData","posts","totalPosts","postCount","userId","getUserId","userAuthenticated","getIsAuth","authStatusSub","getAuthStatusListener","isAuthenticated","OnDelete","paramId","DeletePosts","postsPerPage","currentPage","error","onChangePage","pageEvent","pageIndex","pageSize","ngOnDestroy","unsubscribe","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Projects\\myPosts\\src\\app\\posts\\post-list\\post-list.component.html","C:\\Projects\\myPosts\\src\\app\\posts\\post-list\\post-list.component.ts"],"sourcesContent":["<mat-spinner [diameter]=\"80\" color=\"primary\" *ngIf=\"isLoading\"></mat-spinner>\n<div class=\"postLists\">\n\t<mat-accordion multi=\"true\" *ngIf=\"posts.length > 0 && !isLoading\">\n\t\t<mat-expansion-panel *ngFor=\"let post of posts\">\n\t\t\t<mat-expansion-panel-header>\n\t\t\t\t{{ post?.title }}\n\t\t\t</mat-expansion-panel-header>\n\t\t\t<div class=\"post-image\">\n\t\t\t\t<img [src]=\"post?.imagePath\" [alt]=\"post.title\" />\n\t\t\t</div>\n\t\t\t<p>{{ post?.content }}</p>\n\t\t\t<!-- *ngIf=\"\"userAuthenticated && userId === post.creator -->\n\t\t\t<mat-action-row>\n\t\t\t\t<a mat-button [routerLink]=\"['/edit', post.id]\" color=\"primary\">EDIT</a>\n\t\t\t\t<button mat-button (click)=\"OnDelete(post.id)\" color=\"warn\"> DELETE </button>\n\t\t\t</mat-action-row>\n\t\t</mat-expansion-panel>\n\t</mat-accordion>\n</div>\n<mat-paginator [length]=\"totalPosts\" [pageSize]=\"postsPerPage\" [pageSizeOptions]=\"pageSizeOptions\"\n\t(page)=\"onChangePage($event)\" *ngIf=\"posts.length > 0\"></mat-paginator>\n<p class=\"info-text mat-body-1\" *ngIf=\"posts.length <= 0 && !isLoading\"> No posts added yet! </p>","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { PageEvent } from \"@angular/material/paginator\";\nimport { Subscription } from \"rxjs\";\nimport { AuthService } from \"src/app/Auth/auth.service\";\nimport { post } from \"../post.model\";\nimport { postsService } from \"../posts.service\";\n\n@Component({\n\tselector: \"app-post-list\",\n\ttemplateUrl: \"./post-list.component.html\",\n\tstyleUrls: [\"./post-list.component.css\"],\n})\nexport class PostListComponent implements OnInit, OnDestroy {\n\tisLoading = false;\n\tposts: post[] = [];\n\tprivate postSub: Subscription;\n\ttotalPosts = 0;\n\tcurrentPage = 1;\n\tpostsPerPage = 2;\n\tpageSizeOptions = [1, 2, 4, 6, 10, 15, 20];\n\tpageIndex = 3;\n\tpublic userAuthenticated = false;\n\tauthStatusSub: Subscription;\n\tuserId: string;\n\n\tconstructor(private postservice: postsService, private authService: AuthService) {}\n\n\tngOnInit(): void {\n\t\tthis.isLoading = true;\n\t\tthis.postservice.getPosts(2, 1);\n\t\tthis.postSub = this.postservice\n\t\t\t.getPostUpdateListener()\n\t\t\t.subscribe((postData: { posts: post[]; postCount: number }) => {\n\t\t\t\tthis.isLoading = false;\n\t\t\t\tthis.posts = postData.posts;\n\t\t\t\tthis.totalPosts = postData.postCount;\n\t\t\t});\n\t\tthis.userId = this.authService.getUserId();\n\t\tthis.userAuthenticated = this.authService.getIsAuth();\n\t\tthis.authStatusSub = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\n\t\t\tthis.isLoading = false;\n\t\t\tthis.userAuthenticated = isAuthenticated;\n\t\t\tthis.userId = this.authService.getUserId();\n\t\t});\n\t}\n\n\tOnDelete(paramId: String) {\n\t\tthis.isLoading = true;\n\t\tthis.postservice.DeletePosts(paramId).subscribe(() => {\n\t\t\tthis.postservice.getPosts(this.postsPerPage, this.currentPage);\n\t\t}),\n\t\t\terror => {\n\t\t\t\tthis.isLoading = false;\n\t\t\t};\n\t}\n\tonChangePage(pageEvent: PageEvent) {\n\t\tthis.isLoading = true;\n\t\tthis.currentPage = pageEvent.pageIndex + 1;\n\t\tthis.postsPerPage = pageEvent.pageSize;\n\t\tthis.postservice.getPosts(this.postsPerPage, this.currentPage);\n\t}\n\tngOnDestroy(): void {\n\t\tthis.postSub.unsubscribe();\n\t\tthis.authStatusSub.unsubscribe();\n\t}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}